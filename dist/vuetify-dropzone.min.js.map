{"version":3,"sources":["webpack:///vuetify-dropzone.min.js","webpack:///webpack/bootstrap ba0546ae9392ab510a8f","webpack:///./src/Component.vue","webpack:///./build/production.js","webpack:///Component.vue","webpack:///./~/dropzone/dist/dropzone.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/Component.vue?deed","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","injectStyle","ssrContext","Component","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__src_Component_vue__","__WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default","a","install","Vue","component","window","use","__WEBPACK_IMPORTED_MODULE_0_dropzone__","__WEBPACK_IMPORTED_MODULE_0_dropzone___default","model","prop","props","params","type","default","fallbackUrl","String","multiple","Boolean","options","data","files","dropzone","instance","acceptedFiles","addRemoveLinks","autoProcessQueue","createImageThumbnails","dictUploadButtonLabel","dictUploadButtonIcon","height","parallelUploads","paramName","previewTemplate","thumbnailHeight","thumbnailWidth","uploadMultiple","url","methods","dropzonebox","self","this","mount","autoDiscover","assign","$previewTemplate","$refs","querySelector","innerHTML","remove","listen","on","file","preview","previewElement","status","length","push","$emit","xhr","formData","param","append","progress","setAttribute","dataURL","classList","response","add","setTimeout","submit","processQueue","mounted","watch","Dropzone","Emitter","ExifRestore","camelize","contentLoaded","detectVerticalSquash","drawImageIOSFix","noop","without","slice","extend1","child","parent","ctor","constructor","key","hasProp","__super__","addEventListener","event","fn","_callbacks","emit","args","callback","callbacks","j","len","arguments","apply","removeListener","off","removeAllListeners","removeEventListener","splice","superClass","element1","elementOptions","fallback","ref","element","version","defaultOptions","replace","clickableElements","listeners","document","nodeType","Error","instances","optionsForElement","extend","forceFallback","isBrowserSupported","getAttribute","acceptedMimeTypes","renameFilename","renameFile","_this","method","toUpperCase","getExistingFallback","parentNode","removeChild","previewsContainer","getElement","clickable","getElements","init","resolveOption","events","withCredentials","timeout","maxFilesize","maxThumbnailFilesize","thumbnailMethod","resizeWidth","resizeHeight","resizeMimeType","resizeQuality","resizeMethod","filesizeBase","maxFiles","headers","ignoreHiddenFiles","autoQueue","hiddenInputContainer","capture","dictDefaultMessage","dictFallbackMessage","dictFallbackText","dictFileTooBig","dictInvalidFileType","dictResponseError","dictCancelUpload","dictCancelUploadConfirmation","dictRemoveFile","dictRemoveFileConfirmation","dictMaxFilesExceeded","dictFileSizeUnits","tb","gb","mb","kb","b","accept","done","messageElement","span","className","getElementsByTagName","test","createElement","appendChild","textContent","innerText","getFallbackForm","resize","width","info","srcRatio","trgRatio","srcX","srcY","srcWidth","srcHeight","Math","min","trgWidth","trgHeight","transformFile","match","resizeImage","drop","e","dragstart","dragend","dragenter","dragover","dragleave","paste","reset","addedfile","k","len1","len2","node","ref1","ref2","removeFileEvent","removeLink","results","trim","querySelectorAll","filesize","size","_removeLink","preventDefault","stopPropagation","UPLOADING","confirm","removeFile","removedfile","_updateMaxFilesReachedClass","thumbnail","dataUrl","thumbnailElement","alt","src","error","message","errormultiple","processing","processingmultiple","uploadprogress","bytesSent","nodeName","style","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","complete","completemultiple","maxfilesexceeded","maxfilesreached","queuecomplete","addedfiles","objects","target","val","getAcceptedFiles","accepted","getRejectedFiles","getFilesWithStatus","getQueuedFiles","QUEUED","getUploadingFiles","getAddedFiles","ADDED","getActiveFiles","eventName","noPropagation","setupHiddenFileInput","tagName","contains","hiddenFileInput","visibility","position","top","left","addFile","URL","webkitURL","updateTotalUploadProgress","returnValue","efct","dataTransfer","effectAllowed","undefined","dropEffect","forEach","clickableElement","click","evt","elementInside","enable","destroy","disable","removeAllFiles","indexOf","activeFiles","totalBytes","totalBytesSent","totalUploadProgress","upload","total","_getParamName","_renameFile","existingFallback","fields","fieldsString","form","getFallback","elements","el","setupEventListeners","elementListeners","listener","results1","removeEventListeners","cancelUpload","cutoff","selectedSize","selectedUnit","unit","units","pow","round","items","webkitGetAsEntry","_addFilesFromItems","handleFiles","clipboardData","entry","item","isFile","getAsFile","isDirectory","_addFilesFromDirectory","kind","directory","path","dirReader","errorHandler","readEntries","createReader","console","log","entries","substring","fullPath","isValidFile","filename","_enqueueThumbnail","_errorProcessing","enqueueFile","enqueueFiles","_thumbnailQueue","_processingThumbnail","_processThumbnailQueue","shift","createThumbnail","cancelIfNecessary","canvas","resizedDataURL","toDataURL","restore","dataURItoBlob","fixOrientation","fileReader","FileReader","onload","result","createThumbnailFromUrl","readAsDataURL","crossOrigin","img","loadExif","EXIF","getData","getTag","orientation","ctx","ref3","resizeInfo","getContext","translate","scale","rotate","PI","trgX","trgY","onerror","processingLength","queuedFiles","processFiles","processFile","uploadFiles","_getFilesWithXhr","groupedFile","groupedFiles","CANCELED","abort","option","uploadFile","doneCounter","doneFunction","handleError","headerName","headerValue","input","inputName","inputType","len3","progressObj","ref4","ref5","updateProgress","XMLHttpRequest","open","allFilesFinished","loaded","readyState","responseType","responseText","getResponseHeader","JSON","parse","error1","_finished","onprogress","Accept","Cache-Control","X-Requested-With","setRequestHeader","FormData","hasAttribute","selected","toLowerCase","checked","fileName","transformedFile","submitRequest","send","SUCCESS","ERROR","forElement","discover","checkElements","dropzones","blacklistedBrowsers","capableBrowser","regex","File","FileList","Blob","navigator","userAgent","dataURI","ab","byteString","ia","mimeString","atob","split","ArrayBuffer","Uint8Array","charCodeAt","list","rejectedItem","str","charAt","string","div","childNodes","container","els","Array","question","rejected","baseMimeType","mimeType","validType","jQuery","each","ACCEPTED","PROCESSING","alpha","ey","ih","py","ratio","sy","naturalWidth","naturalHeight","drawImage","getImageData","sx","sw","sh","dx","dy","dw","dh","vertSquashRatio","KEY_STR","encode64","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","isNaN","origFileBase64","resizedFileBase64","image","rawImage","segments","decode64","slice2Segments","exifManipulation","exifArray","newImageArray","getExifArray","insertExif","seg","x","array","ato","buf","imageData","mae","separatePoint","concat","rawImageArray","endPoint","head","base64test","exec","warning","win","doc","poll","pre","rem","root","documentElement","doScroll","createEventObject","frameElement","_autoDiscoverFunction","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","render","staticRenderFns","_scopeId","hook","context","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","h","_vm","_h","$createElement","_c","_self","staticClass","_b","attrs","_v","_t","data-dz-message","data-preview-template","tile","data-dz-thumbnail","fluid","fill-height","column","wrap","dense","card","icon","dark","role","data-dz-remove","data-dz-name","data-dz-size","data-dz-type","data-dz-uploadprogress","flat","data-dz-errormessage","_e","primary","ripple","$event","domProps","_s","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"vuetify-dropzone.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(4)\n}\nvar Component = __webpack_require__(5)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(6),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-7f7a612b\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_Component_vue__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__src_Component_vue__);\n\n\n__WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default.a.install = function install(Vue) {\n  Vue.component(__WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default.a.name, __WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default.a);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default.a);\n\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue.use(__WEBPACK_IMPORTED_MODULE_0__src_Component_vue___default.a);\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dropzone__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dropzone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_dropzone__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'v-dropzone',\n  model: {\n    prop: 'params'\n  },\n  props: {\n    params: { type: Object, default: function _default() {\n        return {};\n      } },\n    fallbackUrl: { type: String, default: '/' },\n    name: { type: String, default: 'file' },\n    multiple: { type: Boolean, default: true },\n    options: { type: Object, default: function _default() {\n        return {};\n      } }\n  },\n  data: function data() {\n    return {\n      files: [],\n      dropzone: {\n        instance: null,\n        options: {\n          acceptedFiles: null,\n          addRemoveLinks: false,\n          autoProcessQueue: false,\n          createImageThumbnails: true,\n          dictUploadButtonLabel: 'Start',\n          dictUploadButtonIcon: 'file_upload',\n          height: '200px',\n          parallelUploads: 2000,\n          paramName: 'file',\n          params: {},\n          // previewsContainer: \".dropzone-previews\",\n          previewTemplate: null,\n          thumbnailHeight: '200',\n          thumbnailWidth: '200',\n          uploadMultiple: true,\n          url: '/'\n        }\n      }\n    };\n  },\n\n\n  methods: {\n    dropzonebox: function dropzonebox() {\n      var self = this;\n\n      return {\n        mount: function mount() {\n          __WEBPACK_IMPORTED_MODULE_0_dropzone___default.a.autoDiscover = false;\n          self.dropzone.options = Object.assign(self.dropzone.options, self.options, { params: self.params });\n          var $previewTemplate = self.$refs.dropzone.querySelector('[data-preview-template]');\n          self.dropzone.options.previewTemplate = $previewTemplate.innerHTML;\n          $previewTemplate.remove();\n          self.dropzone.instance = new __WEBPACK_IMPORTED_MODULE_0_dropzone___default.a(self.$refs.dropzone, self.dropzone.options);\n        },\n        listen: function listen() {\n          self.dropzone.instance.on(\"addedfile\", function (file) {\n            var preview = file.previewElement;\n\n            preview.querySelector('[data-dz-type]') ? preview.querySelector('[data-dz-type]').innerHTML = file.type : '';\n            preview.querySelector('[data-dz-status]') ? preview.querySelector('[data-dz-status]').innerHTML = file.status : '';\n\n            if (self.options.parallelUploads && self.options.parallelUploads === '-1') {\n              self.options.parallelUploads = this.files.length;\n            }\n\n            self.files.push(file);\n            self.$emit('addedfile', file, self.dropzone);\n          });\n\n          self.dropzone.instance.on(\"sending\", function (file, xhr, formData) {\n            // console.log('sending', JSON.parse(JSON.stringify(self.dropzone.options.params)))\n            for (var param in self.params) {\n              // console.log(param, self.params[param])\n              formData.append(param, self.params[param]);\n            }\n          });\n\n          self.dropzone.instance.on(\"uploadprogress\", function (file, progress) {\n            var preview = file.previewElement;\n            // console.log('asd', progress);\n\n            preview.querySelector('[data-dz-uploadprogress]') ? preview.querySelector('[data-dz-uploadprogress]').setAttribute('style', 'width:' + progress + '%') : '';\n            // console.log(\"progress\", progress)\n\n            self.$emit('uploadprogress', file, progress, self.dropzone);\n          });\n\n          self.dropzone.instance.on(\"thumbnail\", function (file, dataURL) {\n            var preview = file.previewElement;\n            var url = dataURL;\n\n            preview.querySelector('[data-dz-thumbnail]').setAttribute('src', url);\n\n            self.$emit('thumbnail', file, dataURL);\n          });\n\n          self.dropzone.instance.on(\"complete\", function (file) {\n            self.$emit('complete', file);\n\n            if (file.status === 'error') {\n              var preview = file.previewElement;\n              preview.querySelector('.dz-error-message').classList.remove('dz-hidden');\n            }\n\n            self.dropzone.options.autoProcessQueue = false;\n          });\n\n          self.dropzone.instance.on(\"success\", function (file, response) {\n            var dis = this;\n            file.previewElement.classList.add(\"dz-success\");\n            // file.previewElement.querySelector('.dz-success-mark').classList.remove('dz-hidden')\n            setTimeout(function () {\n              // dis.removeFile(file)\n            }, 800);\n\n            self.$emit(\"success\", file, response);\n          });\n\n          self.dropzone.instance.on(\"processing\", function () {\n            self.dropzone.options.autoProcessQueue = true;\n            self.$emit(\"processing\");\n          });\n\n          self.dropzone.instance.on(\"sending\", function (file, xhr, formData) {\n            // Will send the filesize along with the file as POST data.\n            // formData.append(\"filesize\", file.size);\n            self.$emit(\"sending\", file, xhr, formData);\n          });\n        },\n        submit: function submit() {\n          self.dropzone.instance.processQueue();\n        }\n      };\n    }\n  },\n\n  mounted: function mounted() {\n    this.dropzonebox().mount();\n    this.dropzonebox().listen();\n  },\n\n\n  watch: {\n    'params': function params(value) {\n      // console.log(value)\n      this.$emit('input', value);\n    }\n  }\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, ExifRestore, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    slice = [].slice,\n    extend1 = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, j, len;\n      event = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (j = 0, len = callbacks.length; j < len; j++) {\n          callback = callbacks[j];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, j, len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = j = 0, len = callbacks.length; j < len; i = ++j) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(superClass) {\n    var extend, resolveOption;\n\n    extend1(Dropzone, superClass);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      timeout: 30000,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      thumbnailMethod: 'crop',\n      resizeWidth: null,\n      resizeHeight: null,\n      resizeMimeType: null,\n      resizeQuality: 0.8,\n      resizeMethod: 'contain',\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      headers: null,\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      renameFile: null,\n      forceFallback: false,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n      },\n      init: function() {\n        return noop;\n      },\n      accept: function(file, done) {\n        return done();\n      },\n      fallback: function() {\n        var child, j, len, messageElement, ref, span;\n        this.element.className = this.element.className + \" dz-browser-not-supported\";\n        ref = this.element.getElementsByTagName(\"div\");\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent != null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText != null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file, width, height, resizeMethod) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        if ((width == null) && (height == null)) {\n          width = info.srcWidth;\n          height = info.srcHeight;\n        } else if (width == null) {\n          width = height * srcRatio;\n        } else if (height == null) {\n          height = width / srcRatio;\n        }\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n          if (resizeMethod === 'crop') {\n            if (srcRatio > trgRatio) {\n              info.srcHeight = file.height;\n              info.srcWidth = info.srcHeight * trgRatio;\n            } else {\n              info.srcWidth = file.width;\n              info.srcHeight = info.srcWidth / trgRatio;\n            }\n          } else if (resizeMethod === 'contain') {\n            if (srcRatio > trgRatio) {\n              height = width / srcRatio;\n            } else {\n              width = height * srcRatio;\n            }\n          } else {\n            throw new Error(\"Unknown resizeMethod '\" + resizeMethod + \"'\");\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n      },\n      transformFile: function(file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) {\n          return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        } else {\n          return done(file);\n        }\n      },\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\",\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var j, k, l, len, len1, len2, node, ref, ref1, ref2, removeFileEvent, removeLink, results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            node.textContent = file.name;\n          }\n          ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (k = 0, len1 = ref1.length; k < len1; k++) {\n            node = ref1[k];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          results = [];\n          for (l = 0, len2 = ref2.length; l < len2; l++) {\n            removeLink = ref2[l];\n            results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return results;\n        }\n      },\n      removedfile: function(file) {\n        var ref;\n        if (file.previewElement) {\n          if ((ref = file.previewElement) != null) {\n            ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var j, len, ref, thumbnailElement;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (j = 0, len = ref.length; j < len; j++) {\n            thumbnailElement = ref[j];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var j, len, node, ref, results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            results.push(node.textContent = message);\n          }\n          return results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var j, len, node, ref, results;\n        if (file.previewElement) {\n          ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            if (node.nodeName === 'PROGRESS') {\n              results.push(node.value = progress);\n            } else {\n              results.push(node.style.width = progress + \"%\");\n            }\n          }\n          return results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop\n    };\n\n    extend = function() {\n      var j, key, len, object, objects, target, val;\n      target = arguments[0], objects = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      for (j = 0, len = objects.length; j < len; j++) {\n        object = objects[j];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element1, options) {\n      var elementOptions, fallback, ref;\n      this.element = element1;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (ref = Dropzone.optionsForElement(this.element)) != null ? ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      if (this.options.renameFilename != null) {\n        this.options.renameFile = (function(_this) {\n          return function(file) {\n            return _this.options.renameFilename.call(_this, file.name, file);\n          };\n        })(this);\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.accepted) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (!file.accepted) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status === status) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, j, len, noPropagation, ref, ref1, setupHiddenFileInput;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, j, len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (j = 0, len = files.length; j < len; j++) {\n                  file = files[j];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (ref = window.URL) != null ? ref : window.webkitURL;\n      ref1 = this.events;\n      for (j = 0, len = ref1.length; j < len; j++) {\n        eventName = ref1[j];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (undefined) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((ref = this.hiddenFileInput) != null ? ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, j, len, ref, totalBytes, totalBytesSent, totalUploadProgress;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        ref = this.getActiveFiles();\n        for (j = 0, len = ref.length; j < len; j++) {\n          file = ref[j];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFile = function(file) {\n      if (typeof this.options.renameFile !== \"function\") {\n        return file.name;\n      }\n      return this.options.renameFile(file);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, j, len, ref, tagName;\n      getFallback = function(elements) {\n        var el, j, len;\n        for (j = 0, len = elements.length; j < len; j++) {\n          el = elements[j];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      ref = [\"div\", \"form\"];\n      for (j = 0, len = ref.length; j < len; j++) {\n        tagName = ref[j];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, j, len, listener, ref, results;\n      ref = this.listeners;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        elementListeners = ref[j];\n        results.push((function() {\n          var ref1, results1;\n          ref1 = elementListeners.events;\n          results1 = [];\n          for (event in ref1) {\n            listener = ref1[event];\n            results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return results1;\n        })());\n      }\n      return results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, j, len, listener, ref, results;\n      ref = this.listeners;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        elementListeners = ref[j];\n        results.push((function() {\n          var ref1, results1;\n          ref1 = elementListeners.events;\n          results1 = [];\n          for (event in ref1) {\n            listener = ref1[event];\n            results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return results1;\n        })());\n      }\n      return results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, j, len, ref, results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        results.push(this.cancelUpload(file));\n      }\n      return results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, j, len, selectedSize, selectedUnit, unit, units;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['tb', 'gb', 'mb', 'kb', 'b'];\n        for (i = j = 0, len = units.length; j < len; i = ++j) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + this.options.dictFileSizeUnits[selectedUnit];\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, ref;\n      if ((e != null ? (ref = e.clipboardData) != null ? ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, j, len, results;\n      results = [];\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        results.push(this.addFile(file));\n      }\n      return results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, j, len, results;\n      results = [];\n      for (j = 0, len = items.length; j < len; j++) {\n        item = items[j];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            results.push(this.addFile(item.getAsFile()));\n          } else {\n            results.push(void 0);\n          }\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, j, len;\n            if (entries.length > 0) {\n              for (j = 0, len = entries.length; j < len; j++) {\n                entry = entries[j];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0,\n        filename: this._renameFile(file)\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      var file;\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      file = this._thumbnailQueue.shift();\n      return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (function(_this) {\n        return function(dataUrl) {\n          _this.emit(\"thumbnail\", file, dataUrl);\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, j, len, ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      ref = this.files.slice();\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.resizeImage = function(file, width, height, resizeMethod, callback) {\n      return this.createThumbnail(file, width, height, resizeMethod, false, (function(_this) {\n        return function(dataUrl, canvas) {\n          var resizeMimeType, resizedDataURL;\n          if (canvas === null) {\n            return callback(file);\n          } else {\n            resizeMimeType = _this.options.resizeMimeType;\n            if (resizeMimeType == null) {\n              resizeMimeType = file.type;\n            }\n            resizedDataURL = canvas.toDataURL(resizeMimeType, _this.options.resizeQuality);\n            if (resizeMimeType === 'image/jpeg' || resizeMimeType === 'image/jpg') {\n              resizedDataURL = ExifRestore.restore(file.dataURL, resizedDataURL);\n            }\n            return callback(Dropzone.dataURItoBlob(resizedDataURL));\n          }\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, width, height, resizeMethod, fixOrientation, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          file.dataURL = fileReader.result;\n          if (file.type === \"image/svg+xml\") {\n            if (callback != null) {\n              callback(fileReader.result);\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var loadExif;\n          loadExif = function(callback) {\n            return callback(1);\n          };\n          if ((typeof EXIF !== \"undefined\" && EXIF !== null) && fixOrientation) {\n            loadExif = function(callback) {\n              return EXIF.getData(img, function() {\n                return callback(EXIF.getTag(this, 'Orientation'));\n              });\n            };\n          }\n          return loadExif(function(orientation) {\n            var canvas, ctx, ref, ref1, ref2, ref3, resizeInfo, thumbnail;\n            file.width = img.width;\n            file.height = img.height;\n            resizeInfo = _this.options.resize.call(_this, file, width, height, resizeMethod);\n            canvas = document.createElement(\"canvas\");\n            ctx = canvas.getContext(\"2d\");\n            canvas.width = resizeInfo.trgWidth;\n            canvas.height = resizeInfo.trgHeight;\n            if (orientation > 4) {\n              canvas.width = resizeInfo.trgHeight;\n              canvas.height = resizeInfo.trgWidth;\n            }\n            switch (orientation) {\n              case 2:\n                ctx.translate(canvas.width, 0);\n                ctx.scale(-1, 1);\n                break;\n              case 3:\n                ctx.translate(canvas.width, canvas.height);\n                ctx.rotate(Math.PI);\n                break;\n              case 4:\n                ctx.translate(0, canvas.height);\n                ctx.scale(1, -1);\n                break;\n              case 5:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n              case 6:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -canvas.height);\n                break;\n              case 7:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(canvas.width, -canvas.height);\n                ctx.scale(-1, 1);\n                break;\n              case 8:\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-canvas.width, 0);\n            }\n            drawImageIOSFix(ctx, img, (ref = resizeInfo.srcX) != null ? ref : 0, (ref1 = resizeInfo.srcY) != null ? ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (ref2 = resizeInfo.trgX) != null ? ref2 : 0, (ref3 = resizeInfo.trgY) != null ? ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n            thumbnail = canvas.toDataURL(\"image/png\");\n            if (callback != null) {\n              return callback(thumbnail, canvas);\n            }\n          });\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = file.dataURL;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var j, len, ref, results;\n        ref = this.files;\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          file = ref[j];\n          if (file.xhr === xhr) {\n            results.push(file);\n          }\n        }\n        return results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, j, k, len, len1, ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (j = 0, len = groupedFiles.length; j < len; j++) {\n          groupedFile = groupedFiles[j];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (k = 0, len1 = groupedFiles.length; k < len1; k++) {\n          groupedFile = groupedFiles[k];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((ref = file.status) === Dropzone.ADDED || ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var doneCounter, doneFunction, file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, j, k, key, l, len, len1, len2, len3, m, method, o, option, progressObj, ref, ref1, ref2, ref3, ref4, ref5, response, results, updateProgress, url, value, xhr;\n      xhr = new XMLHttpRequest();\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.timeout = resolveOption(this.options.timeout, files);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var k, len1, results;\n          results = [];\n          for (k = 0, len1 = files.length; k < len1; k++) {\n            file = files[k];\n            results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, k, l, len1, len2, len3, m, progress, results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (k = 0, len1 = files.length; k < len1; k++) {\n              file = files[k];\n              file.upload.progress = progress;\n              file.upload.total = e.total;\n              file.upload.bytesSent = e.loaded;\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (l = 0, len2 = files.length; l < len2; l++) {\n              file = files[l];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          results = [];\n          for (m = 0, len3 = files.length; m < len3; m++) {\n            file = files[m];\n            results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var error1, ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          if (xhr.responseType !== 'arraybuffer' && xhr.responseType !== 'blob') {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n              try {\n                response = JSON.parse(response);\n              } catch (error1) {\n                e = error1;\n                response = \"Invalid JSON response from server.\";\n              }\n            }\n          }\n          updateProgress();\n          if (!((200 <= (ref = xhr.status) && ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (ref = xhr.upload) != null ? ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        ref1 = this.options.params;\n        for (key in ref1) {\n          value = ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (k = 0, len1 = files.length; k < len1; k++) {\n        file = files[k];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (l = 0, len2 = ref2.length; l < len2; l++) {\n          input = ref2[l];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            ref3 = input.options;\n            for (m = 0, len3 = ref3.length; m < len3; m++) {\n              option = ref3[m];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((ref4 = inputType.toLowerCase()) !== \"checkbox\" && ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      doneCounter = 0;\n      results = [];\n      for (i = o = 0, ref5 = files.length - 1; 0 <= ref5 ? o <= ref5 : o >= ref5; i = 0 <= ref5 ? ++o : --o) {\n        doneFunction = (function(_this) {\n          return function(file, paramName, fileName) {\n            return function(transformedFile) {\n              formData.append(paramName, transformedFile, fileName);\n              if (++doneCounter === files.length) {\n                return _this.submitRequest(xhr, formData, files);\n              }\n            };\n          };\n        })(this);\n        results.push(this.options.transformFile.call(this, files[i], doneFunction(files[i], this._getParamName(i), files[i].upload.filename)));\n      }\n      return results;\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"5.1.1\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, j, len, results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, j, len, results;\n        results = [];\n        for (j = 0, len = elements.length; j < len; j++) {\n          el = elements[j];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            results.push(dropzones.push(el));\n          } else {\n            results.push(void 0);\n          }\n        }\n        return results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    results = [];\n    for (j = 0, len = dropzones.length; j < len; j++) {\n      dropzone = dropzones[j];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        results.push(new Dropzone(dropzone));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, j, len, ref, regex;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        ref = Dropzone.blacklistedBrowsers;\n        for (j = 0, len = ref.length; j < len; j++) {\n          regex = ref[j];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  Dropzone.dataURItoBlob = function(dataURI) {\n    var ab, byteString, i, ia, j, mimeString, ref;\n    byteString = atob(dataURI.split(',')[1]);\n    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    ab = new ArrayBuffer(byteString.length);\n    ia = new Uint8Array(ab);\n    for (i = j = 0, ref = byteString.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  };\n\n  without = function(list, rejectedItem) {\n    var item, j, len, results;\n    results = [];\n    for (j = 0, len = list.length; j < len; j++) {\n      item = list[j];\n      if (item !== rejectedItem) {\n        results.push(item);\n      }\n    }\n    return results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, error1, j, k, len, len1, ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (j = 0, len = els.length; j < len; j++) {\n          el = els[j];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (error1) {\n        e = error1;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      ref = document.querySelectorAll(els);\n      for (k = 0, len1 = ref.length; k < len1; k++) {\n        el = ref[k];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, j, len, mimeType, validType;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (j = 0, len = acceptedFiles.length; j < len; j++) {\n      validType = acceptedFiles[j];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(1, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n  ExifRestore = (function() {\n    function ExifRestore() {}\n\n    ExifRestore.KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    ExifRestore.encode64 = function(input) {\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;\n      output = '';\n      chr1 = void 0;\n      chr2 = void 0;\n      chr3 = '';\n      enc1 = void 0;\n      enc2 = void 0;\n      enc3 = void 0;\n      enc4 = '';\n      i = 0;\n      while (true) {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n      return output;\n    };\n\n    ExifRestore.restore = function(origFileBase64, resizedFileBase64) {\n      var image, rawImage, segments;\n      if (!origFileBase64.match('data:image/jpeg;base64,')) {\n        return resizedFileBase64;\n      }\n      rawImage = this.decode64(origFileBase64.replace('data:image/jpeg;base64,', ''));\n      segments = this.slice2Segments(rawImage);\n      image = this.exifManipulation(resizedFileBase64, segments);\n      return 'data:image/jpeg;base64,' + this.encode64(image);\n    };\n\n    ExifRestore.exifManipulation = function(resizedFileBase64, segments) {\n      var aBuffer, exifArray, newImageArray;\n      exifArray = this.getExifArray(segments);\n      newImageArray = this.insertExif(resizedFileBase64, exifArray);\n      aBuffer = new Uint8Array(newImageArray);\n      return aBuffer;\n    };\n\n    ExifRestore.getExifArray = function(segments) {\n      var seg, x;\n      seg = void 0;\n      x = 0;\n      while (x < segments.length) {\n        seg = segments[x];\n        if (seg[0] === 255 & seg[1] === 225) {\n          return seg;\n        }\n        x++;\n      }\n      return [];\n    };\n\n    ExifRestore.insertExif = function(resizedFileBase64, exifArray) {\n      var array, ato, buf, imageData, mae, separatePoint;\n      imageData = resizedFileBase64.replace('data:image/jpeg;base64,', '');\n      buf = this.decode64(imageData);\n      separatePoint = buf.indexOf(255, 3);\n      mae = buf.slice(0, separatePoint);\n      ato = buf.slice(separatePoint);\n      array = mae;\n      array = array.concat(exifArray);\n      array = array.concat(ato);\n      return array;\n    };\n\n    ExifRestore.slice2Segments = function(rawImageArray) {\n      var endPoint, head, length, seg, segments;\n      head = 0;\n      segments = [];\n      while (true) {\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {\n          break;\n        }\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {\n          head += 2;\n        } else {\n          length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n          endPoint = head + length + 2;\n          seg = rawImageArray.slice(head, endPoint);\n          segments.push(seg);\n          head = endPoint;\n        }\n        if (head > rawImageArray.length) {\n          break;\n        }\n      }\n      return segments;\n    };\n\n    ExifRestore.decode64 = function(input) {\n      var base64test, buf, chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;\n      output = '';\n      chr1 = void 0;\n      chr2 = void 0;\n      chr3 = '';\n      enc1 = void 0;\n      enc2 = void 0;\n      enc3 = void 0;\n      enc4 = '';\n      i = 0;\n      buf = [];\n      base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        console.warning('There were invalid base64 characters in the input text.\\n' + 'Valid base64 characters are A-Z, a-z, 0-9, \\'+\\', \\'/\\',and \\'=\\'\\n' + 'Expect errors in decoding.');\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n      while (true) {\n        enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n        chr1 = enc1 << 2 | enc2 >> 4;\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n        chr3 = (enc3 & 3) << 6 | enc4;\n        buf.push(chr1);\n        if (enc3 !== 64) {\n          buf.push(chr2);\n        }\n        if (enc4 !== 64) {\n          buf.push(chr3);\n        }\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n      return buf;\n    };\n\n    return ExifRestore;\n\n  })();\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e, error1;\n      try {\n        root.doScroll(\"left\");\n      } catch (error1) {\n        e = error1;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (undefined) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dropzone-container\"\n  }, [_c('div', {\n    ref: \"dropzone\",\n    staticClass: \"dropzone\"\n  }, [_c('div', {\n    staticClass: \"fallback\"\n  }, [_c('input', _vm._b({\n    attrs: {\n      \"type\": \"file\",\n      \"name\": _vm.name\n    }\n  }, 'input', {\n    'multiple': _vm.dropzone.options.uploadMultiple\n  }, false))]), _vm._v(\" \"), _vm._t(\"default-message\", [_c('div', {\n    staticClass: \"dz-message text-xs-center\",\n    attrs: {\n      \"data-dz-message\": \"\"\n    }\n  }, [_c('v-icon', {\n    staticClass: \"grey--text display-4\"\n  }, [_vm._v(\"cloud_upload\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"grey--text\"\n  }, [_vm._v(\"UPLOAD\")])], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"dropzone-previews\"\n  }, [_c('div', {\n    staticClass: \"text-xs-center\",\n    attrs: {\n      \"data-preview-template\": \"\"\n    }\n  }, [_vm._t(\"preview-template\", [_c('v-card', {\n    staticClass: \"card--thumbnail elevation-1 ma-2\",\n    attrs: {\n      \"tile\": \"\"\n    }\n  }, [_c('v-card-media', {\n    staticClass: \"accent\",\n    attrs: {\n      \"data-dz-thumbnail\": \"\",\n      \"height\": _vm.dropzone.options.thumbnailHeight\n    }\n  }, [_c('img', {\n    attrs: {\n      \"data-dz-thumbnail\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-container', {\n    staticClass: \"zi-1\",\n    attrs: {\n      \"fluid\": \"\",\n      \"fill-height\": \"\"\n    }\n  }, [_c('v-layout', {\n    staticClass: \"pa-0\",\n    attrs: {\n      \"column\": \"\",\n      \"wrap\": \"\",\n      \"fill-height\": \"\"\n    }\n  }, [_c('v-toolbar', {\n    staticClass: \"transparent\",\n    attrs: {\n      \"dense\": \"\",\n      \"card\": \"\"\n    }\n  }, [_c('v-spacer'), _vm._v(\" \"), _c('v-btn', {\n    staticClass: \"error btn--dz-remove\",\n    attrs: {\n      \"icon\": \"\",\n      \"dark\": \"\",\n      \"role\": \"button\",\n      \"data-dz-remove\": \"\"\n    }\n  }, [_c('v-icon', [_vm._v(\"close\")])], 1)], 1), _vm._v(\" \"), _c('v-spacer')], 1)], 1)], 1), _vm._v(\" \"), _c('v-card-title', {\n    staticClass: \"subheading\",\n    attrs: {\n      \"data-dz-name\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-card-actions', {\n    staticClass: \"caption\"\n  }, [_c('div', {\n    staticClass: \"dz-size\",\n    attrs: {\n      \"data-dz-size\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-spacer'), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-type\",\n    attrs: {\n      \"data-dz-type\": \"\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-success-mark\"\n  }, [_c('v-icon', {\n    staticClass: \"display-4 success--text\"\n  }, [_vm._v(\"check\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-progress\"\n  }, [_c('div', {\n    staticClass: \"dz-upload primary\",\n    attrs: {\n      \"data-dz-uploadprogress\": \"\"\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-error-message dz-hidden\"\n  }, [_c('div', {\n    staticClass: \"dz-error-mark text-xs-center\"\n  }, [_c('v-icon', {\n    staticClass: \"display-4 error--text\"\n  }, [_vm._v(\"warning\")])], 1), _vm._v(\" \"), _c('v-card', {\n    staticClass: \"error white--text\",\n    attrs: {\n      \"flat\": \"\",\n      \"tile\": \"\"\n    }\n  }, [_c('v-card-text', {\n    staticClass: \"dz-errormessage-blurb\",\n    attrs: {\n      \"data-dz-errormessage\": \"\"\n    }\n  })], 1)], 1)], 1)])], 2)])], 2), _vm._v(\" \"), _vm._t(\"default\"), _vm._v(\" \"), (!_vm.dropzone.options.autoProcessQueue) ? [_vm._t(\"submit\", [_c('v-card-actions', [_c('v-spacer'), _vm._v(\" \"), _c('v-btn', {\n    attrs: {\n      \"primary\": \"\",\n      \"ripple\": \"\"\n    },\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.dropzonebox().submit()\n      }\n    }\n  }, [_c('v-icon', {\n    attrs: {\n      \"left\": \"\"\n    },\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.dropzone.options.dictUploadButtonIcon)\n    }\n  }), _c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.dropzone.options.dictUploadButtonLabel)\n    }\n  })], 1)], 1)])] : _vm._e()], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// vuetify-dropzone.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba0546ae9392ab510a8f","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7f7a612b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../node_modules/vue-loader/lib/selector?type=styles&index=0!./Component.vue\")\n}\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./Component.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7f7a612b\\\",\\\"hasScoped\\\":true}!../node_modules/vue-loader/lib/selector?type=template&index=0!./Component.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-7f7a612b\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Component.vue\n// module id = 0\n// module chunks = 0","import Component from '../src/Component.vue'\n\nComponent.install = function install (Vue) {\n  Vue.component(Component.name, Component)\n}\n\nexport default Component\n\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue.use(Component)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./build/production.js","<template>\n  <div class=\"dropzone-container\">\n    <!-- <form :action=\"fallbackUrl\" method=\"POST\" enctype=\"multipart/form-data\"> -->\n      <div ref=\"dropzone\" class=\"dropzone\">\n        <div class=\"fallback\">\n          <input type=\"file\" v-bind=\"{'multiple': dropzone.options.uploadMultiple}\" :name=\"name\">\n        </div>\n        <slot name=\"default-message\">\n          <div class=\"dz-message text-xs-center\" data-dz-message>\n            <v-icon class=\"grey--text display-4\">cloud_upload</v-icon>\n            <div class=\"grey--text\">UPLOAD</div>\n          </div>\n        </slot>\n        <div class=\"dropzone-previews\">\n          <div data-preview-template class=\"text-xs-center\">\n            <slot name=\"preview-template\">\n              <v-card tile class=\"card--thumbnail elevation-1 ma-2\">\n                <v-card-media data-dz-thumbnail class=\"accent\" :height=\"dropzone.options.thumbnailHeight\">\n                  <img data-dz-thumbnail>\n                  <v-container fluid fill-height class=\"zi-1\">\n                    <v-layout column wrap fill-height class=\"pa-0\">\n                      <v-toolbar dense card class=\"transparent\">\n                        <v-spacer></v-spacer>\n                        <v-btn icon dark class=\"error btn--dz-remove\" role=\"button\" data-dz-remove><v-icon>close</v-icon></v-btn>\n                      </v-toolbar>\n                      <v-spacer></v-spacer>\n                    </v-layout>\n                  </v-container>\n                </v-card-media>\n                <v-card-title class=\"subheading\" data-dz-name></v-card-title>\n                <v-card-actions class=\"caption\">\n                  <div class=\"dz-size\" data-dz-size></div>\n                  <v-spacer></v-spacer>\n                  <div class=\"dz-type\" data-dz-type></div>\n                </v-card-actions>\n\n                <div class=\"dz-success-mark\">\n                  <v-icon class=\"display-4 success--text\">check</v-icon>\n                </div>\n                <div class=\"dz-progress\"><div class=\"dz-upload primary\" data-dz-uploadprogress></div></div>\n                <div class=\"dz-error-message dz-hidden\">\n                  <div class=\"dz-error-mark text-xs-center\">\n                    <v-icon class=\"display-4 error--text\">warning</v-icon>\n                  </div>\n                  <v-card flat tile class=\"error white--text\">\n                    <v-card-text data-dz-errormessage class=\"dz-errormessage-blurb\"></v-card-text>\n                  </v-card>\n                </div>\n              </v-card>\n            </slot>\n          </div>\n        </div>\n      </div>\n      <slot></slot>\n      <template v-if=\"!dropzone.options.autoProcessQueue\">\n        <slot name=\"submit\">\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn primary @click.stop=\"dropzonebox().submit()\" ripple><v-icon left v-html=\"dropzone.options.dictUploadButtonIcon\"></v-icon><span v-html=\"dropzone.options.dictUploadButtonLabel\"></span></v-btn>\n          </v-card-actions>\n        </slot>\n      </template>\n    <!-- </form> -->\n  </div>\n</template>\n\n<script>\n  import Dropzone from 'dropzone'\n\n  export default {\n    name: 'v-dropzone',\n    model: {\n      prop: 'params'\n    },\n    props: {\n      params: { type: Object, default: () => { return {} } },\n      fallbackUrl: { type: String, default: '/' },\n      name: { type: String, default: 'file' },\n      multiple: { type: Boolean, default: true },\n      options: { type: Object, default: () => { return {} } }\n    },\n    data () {\n      return {\n        files: [],\n        dropzone: {\n          instance: null,\n          options: {\n            acceptedFiles: null,\n            addRemoveLinks: false,\n            autoProcessQueue: false,\n            createImageThumbnails: true,\n            dictUploadButtonLabel: 'Start',\n            dictUploadButtonIcon: 'file_upload',\n            height: '200px',\n            parallelUploads: 2000,\n            paramName: 'file',\n            params: {},\n            // previewsContainer: \".dropzone-previews\",\n            previewTemplate: null,\n            thumbnailHeight: '200',\n            thumbnailWidth: '200',\n            uploadMultiple: true,\n            url: '/'\n          }\n        }\n      }\n    },\n\n    methods: {\n      dropzonebox: function () {\n        let self = this\n\n        return {\n          mount () {\n            Dropzone.autoDiscover = false\n            self.dropzone.options = Object.assign(self.dropzone.options, self.options, {params: self.params})\n            let $previewTemplate = self.$refs.dropzone.querySelector('[data-preview-template]')\n            self.dropzone.options.previewTemplate = $previewTemplate.innerHTML\n            $previewTemplate.remove()\n            self.dropzone.instance = new Dropzone(self.$refs.dropzone, self.dropzone.options)\n          },\n\n          listen () {\n            self.dropzone.instance.on(\"addedfile\", function (file) {\n              let preview = file.previewElement\n\n              preview.querySelector('[data-dz-type]') ? preview.querySelector('[data-dz-type]').innerHTML = file.type : ''\n              preview.querySelector('[data-dz-status]') ? preview.querySelector('[data-dz-status]').innerHTML = file.status : ''\n\n              if (self.options.parallelUploads && self.options.parallelUploads === '-1') {\n                self.options.parallelUploads = this.files.length\n              }\n\n              self.files.push(file)\n              self.$emit('addedfile', file, self.dropzone)\n            })\n\n            self.dropzone.instance.on(\"sending\", function (file, xhr, formData) {\n              // console.log('sending', JSON.parse(JSON.stringify(self.dropzone.options.params)))\n              for (let param in self.params) {\n                // console.log(param, self.params[param])\n                formData.append(param, self.params[param])\n              }\n            })\n\n            self.dropzone.instance.on(\"uploadprogress\", function (file, progress) {\n              let preview = file.previewElement\n              // console.log('asd', progress);\n\n              preview.querySelector('[data-dz-uploadprogress]') ? preview.querySelector('[data-dz-uploadprogress]').setAttribute('style', 'width:'+progress+'%') : ''\n              // console.log(\"progress\", progress)\n\n              self.$emit('uploadprogress', file, progress, self.dropzone)\n            })\n\n            self.dropzone.instance.on(\"thumbnail\", function (file, dataURL) {\n              let preview = file.previewElement\n              let url = dataURL\n\n              preview.querySelector('[data-dz-thumbnail]').setAttribute('src', url)\n\n              self.$emit('thumbnail', file, dataURL)\n            })\n\n            self.dropzone.instance.on(\"complete\", function (file) {\n              self.$emit('complete', file)\n\n              if (file.status === 'error') {\n                let preview = file.previewElement\n                preview.querySelector('.dz-error-message').classList.remove('dz-hidden')\n              }\n\n              self.dropzone.options.autoProcessQueue = false\n            })\n\n            self.dropzone.instance.on(\"success\", function (file, response) {\n              let dis = this\n              file.previewElement.classList.add(\"dz-success\")\n              // file.previewElement.querySelector('.dz-success-mark').classList.remove('dz-hidden')\n              setTimeout(function () {\n                // dis.removeFile(file)\n              }, 800)\n\n              self.$emit(\"success\", file, response)\n            })\n\n            self.dropzone.instance.on(\"processing\", function () {\n              self.dropzone.options.autoProcessQueue = true\n              self.$emit(\"processing\")\n            })\n\n            self.dropzone.instance.on(\"sending\", function(file, xhr, formData) {\n              // Will send the filesize along with the file as POST data.\n              // formData.append(\"filesize\", file.size);\n              self.$emit(\"sending\", file, xhr, formData)\n            })\n          },\n\n          submit () {\n            self.dropzone.instance.processQueue()\n          }\n        }\n      }\n    },\n\n    mounted () {\n      this.dropzonebox().mount()\n      this.dropzonebox().listen()\n    },\n\n    watch: {\n      'params': function (value) {\n        // console.log(value)\n        this.$emit('input', value)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"~dropzone/src/dropzone\";\n\n  .dropzone {\n    border: 1px dashed rgba(0,0,0,0.2);\n\n    &-container {\n      padding: 1rem;\n\n      &:hover {\n        .dropzone {\n          background-color: rgba(0,0,0,0.02);\n        }\n      }\n\n      [role=button] {\n        cursor: pointer;\n      }\n\n      .card__media {\n        width: 250px;\n        img[data-dz-thumbnail] {\n          width: 100%;\n          height: auto;\n          position: absolute;\n          top: 0;\n          left: 0;\n          // z-index: 1;\n        }\n      }\n\n      .card--thumbnail {\n        width: auto;\n        max-width: 250px;\n        display: inline-block;\n      }\n    }\n\n    .dz-hidden {\n      display: none;\n    }\n\n    .dz-progress .dz-upload {\n      transition: width 0.03s ease-in-out;\n      width: 0;\n      height: 3px;\n    }\n\n    .btn--dz-remove {\n      // z-index: 3;\n    }\n\n    .dz-success-mark {\n      display: none;\n    }\n\n    .dz-success {\n      .dz-success-mark {\n        display: block;\n      }\n    }\n\n    .dz-error-message {\n      transition: all 0.05s ease-in-out;\n    }\n\n    .dz-error-mark, .dz-success-mark {\n      .icon, > i, > span {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translateY(-50%) translateX(-50%);\n      }\n    }\n\n    .dz-errormessage-blurb {\n      max-height: 300px;\n      max-width: 100%;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n\n    .dz-default.dz-message span {\n      font-size: 16px;\n      font-weight: bold;\n      color: rgba(0,0,0,0.3);\n    }\n\n    .zi-1 {\n      z-index: 1;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Component.vue?16eb2369","\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, ExifRestore, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    slice = [].slice,\n    extend1 = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, j, len;\n      event = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (j = 0, len = callbacks.length; j < len; j++) {\n          callback = callbacks[j];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, j, len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = j = 0, len = callbacks.length; j < len; i = ++j) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(superClass) {\n    var extend, resolveOption;\n\n    extend1(Dropzone, superClass);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      timeout: 30000,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      thumbnailMethod: 'crop',\n      resizeWidth: null,\n      resizeHeight: null,\n      resizeMimeType: null,\n      resizeQuality: 0.8,\n      resizeMethod: 'contain',\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      headers: null,\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      renameFile: null,\n      forceFallback: false,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      dictFileSizeUnits: {\n        tb: \"TB\",\n        gb: \"GB\",\n        mb: \"MB\",\n        kb: \"KB\",\n        b: \"b\"\n      },\n      init: function() {\n        return noop;\n      },\n      accept: function(file, done) {\n        return done();\n      },\n      fallback: function() {\n        var child, j, len, messageElement, ref, span;\n        this.element.className = this.element.className + \" dz-browser-not-supported\";\n        ref = this.element.getElementsByTagName(\"div\");\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent != null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText != null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file, width, height, resizeMethod) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        if ((width == null) && (height == null)) {\n          width = info.srcWidth;\n          height = info.srcHeight;\n        } else if (width == null) {\n          width = height * srcRatio;\n        } else if (height == null) {\n          height = width / srcRatio;\n        }\n        width = Math.min(width, info.srcWidth);\n        height = Math.min(height, info.srcHeight);\n        trgRatio = width / height;\n        if (info.srcWidth > width || info.srcHeight > height) {\n          if (resizeMethod === 'crop') {\n            if (srcRatio > trgRatio) {\n              info.srcHeight = file.height;\n              info.srcWidth = info.srcHeight * trgRatio;\n            } else {\n              info.srcWidth = file.width;\n              info.srcHeight = info.srcWidth / trgRatio;\n            }\n          } else if (resizeMethod === 'contain') {\n            if (srcRatio > trgRatio) {\n              height = width / srcRatio;\n            } else {\n              width = height * srcRatio;\n            }\n          } else {\n            throw new Error(\"Unknown resizeMethod '\" + resizeMethod + \"'\");\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        info.trgWidth = width;\n        info.trgHeight = height;\n        return info;\n      },\n      transformFile: function(file, done) {\n        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) {\n          return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);\n        } else {\n          return done(file);\n        }\n      },\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\",\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var j, k, l, len, len1, len2, node, ref, ref1, ref2, removeFileEvent, removeLink, results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            node.textContent = file.name;\n          }\n          ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (k = 0, len1 = ref1.length; k < len1; k++) {\n            node = ref1[k];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          results = [];\n          for (l = 0, len2 = ref2.length; l < len2; l++) {\n            removeLink = ref2[l];\n            results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return results;\n        }\n      },\n      removedfile: function(file) {\n        var ref;\n        if (file.previewElement) {\n          if ((ref = file.previewElement) != null) {\n            ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var j, len, ref, thumbnailElement;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (j = 0, len = ref.length; j < len; j++) {\n            thumbnailElement = ref[j];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var j, len, node, ref, results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            results.push(node.textContent = message);\n          }\n          return results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var j, len, node, ref, results;\n        if (file.previewElement) {\n          ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            node = ref[j];\n            if (node.nodeName === 'PROGRESS') {\n              results.push(node.value = progress);\n            } else {\n              results.push(node.style.width = progress + \"%\");\n            }\n          }\n          return results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop\n    };\n\n    extend = function() {\n      var j, key, len, object, objects, target, val;\n      target = arguments[0], objects = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      for (j = 0, len = objects.length; j < len; j++) {\n        object = objects[j];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element1, options) {\n      var elementOptions, fallback, ref;\n      this.element = element1;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (ref = Dropzone.optionsForElement(this.element)) != null ? ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      if (this.options.renameFilename != null) {\n        this.options.renameFile = (function(_this) {\n          return function(file) {\n            return _this.options.renameFilename.call(_this, file.name, file);\n          };\n        })(this);\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.accepted) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (!file.accepted) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status === status) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, j, len, ref, results;\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          results.push(file);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, j, len, noPropagation, ref, ref1, setupHiddenFileInput;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, j, len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (j = 0, len = files.length; j < len; j++) {\n                  file = files[j];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (ref = window.URL) != null ? ref : window.webkitURL;\n      ref1 = this.events;\n      for (j = 0, len = ref1.length; j < len; j++) {\n        eventName = ref1[j];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (undefined) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((ref = this.hiddenFileInput) != null ? ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, j, len, ref, totalBytes, totalBytesSent, totalUploadProgress;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        ref = this.getActiveFiles();\n        for (j = 0, len = ref.length; j < len; j++) {\n          file = ref[j];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFile = function(file) {\n      if (typeof this.options.renameFile !== \"function\") {\n        return file.name;\n      }\n      return this.options.renameFile(file);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, j, len, ref, tagName;\n      getFallback = function(elements) {\n        var el, j, len;\n        for (j = 0, len = elements.length; j < len; j++) {\n          el = elements[j];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      ref = [\"div\", \"form\"];\n      for (j = 0, len = ref.length; j < len; j++) {\n        tagName = ref[j];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, j, len, listener, ref, results;\n      ref = this.listeners;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        elementListeners = ref[j];\n        results.push((function() {\n          var ref1, results1;\n          ref1 = elementListeners.events;\n          results1 = [];\n          for (event in ref1) {\n            listener = ref1[event];\n            results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return results1;\n        })());\n      }\n      return results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, j, len, listener, ref, results;\n      ref = this.listeners;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        elementListeners = ref[j];\n        results.push((function() {\n          var ref1, results1;\n          ref1 = elementListeners.events;\n          results1 = [];\n          for (event in ref1) {\n            listener = ref1[event];\n            results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return results1;\n        })());\n      }\n      return results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, j, len, ref, results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      ref = this.files;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        results.push(this.cancelUpload(file));\n      }\n      return results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, j, len, selectedSize, selectedUnit, unit, units;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['tb', 'gb', 'mb', 'kb', 'b'];\n        for (i = j = 0, len = units.length; j < len; i = ++j) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + this.options.dictFileSizeUnits[selectedUnit];\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, ref;\n      if ((e != null ? (ref = e.clipboardData) != null ? ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, j, len, results;\n      results = [];\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        results.push(this.addFile(file));\n      }\n      return results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, j, len, results;\n      results = [];\n      for (j = 0, len = items.length; j < len; j++) {\n        item = items[j];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            results.push(this.addFile(item.getAsFile()));\n          } else {\n            results.push(void 0);\n          }\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, j, len;\n            if (entries.length > 0) {\n              for (j = 0, len = entries.length; j < len; j++) {\n                entry = entries[j];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0,\n        filename: this._renameFile(file)\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      var file;\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      file = this._thumbnailQueue.shift();\n      return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (function(_this) {\n        return function(dataUrl) {\n          _this.emit(\"thumbnail\", file, dataUrl);\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, j, len, ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      ref = this.files.slice();\n      for (j = 0, len = ref.length; j < len; j++) {\n        file = ref[j];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.resizeImage = function(file, width, height, resizeMethod, callback) {\n      return this.createThumbnail(file, width, height, resizeMethod, false, (function(_this) {\n        return function(dataUrl, canvas) {\n          var resizeMimeType, resizedDataURL;\n          if (canvas === null) {\n            return callback(file);\n          } else {\n            resizeMimeType = _this.options.resizeMimeType;\n            if (resizeMimeType == null) {\n              resizeMimeType = file.type;\n            }\n            resizedDataURL = canvas.toDataURL(resizeMimeType, _this.options.resizeQuality);\n            if (resizeMimeType === 'image/jpeg' || resizeMimeType === 'image/jpg') {\n              resizedDataURL = ExifRestore.restore(file.dataURL, resizedDataURL);\n            }\n            return callback(Dropzone.dataURItoBlob(resizedDataURL));\n          }\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, width, height, resizeMethod, fixOrientation, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          file.dataURL = fileReader.result;\n          if (file.type === \"image/svg+xml\") {\n            if (callback != null) {\n              callback(fileReader.result);\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var loadExif;\n          loadExif = function(callback) {\n            return callback(1);\n          };\n          if ((typeof EXIF !== \"undefined\" && EXIF !== null) && fixOrientation) {\n            loadExif = function(callback) {\n              return EXIF.getData(img, function() {\n                return callback(EXIF.getTag(this, 'Orientation'));\n              });\n            };\n          }\n          return loadExif(function(orientation) {\n            var canvas, ctx, ref, ref1, ref2, ref3, resizeInfo, thumbnail;\n            file.width = img.width;\n            file.height = img.height;\n            resizeInfo = _this.options.resize.call(_this, file, width, height, resizeMethod);\n            canvas = document.createElement(\"canvas\");\n            ctx = canvas.getContext(\"2d\");\n            canvas.width = resizeInfo.trgWidth;\n            canvas.height = resizeInfo.trgHeight;\n            if (orientation > 4) {\n              canvas.width = resizeInfo.trgHeight;\n              canvas.height = resizeInfo.trgWidth;\n            }\n            switch (orientation) {\n              case 2:\n                ctx.translate(canvas.width, 0);\n                ctx.scale(-1, 1);\n                break;\n              case 3:\n                ctx.translate(canvas.width, canvas.height);\n                ctx.rotate(Math.PI);\n                break;\n              case 4:\n                ctx.translate(0, canvas.height);\n                ctx.scale(1, -1);\n                break;\n              case 5:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n              case 6:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -canvas.height);\n                break;\n              case 7:\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(canvas.width, -canvas.height);\n                ctx.scale(-1, 1);\n                break;\n              case 8:\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-canvas.width, 0);\n            }\n            drawImageIOSFix(ctx, img, (ref = resizeInfo.srcX) != null ? ref : 0, (ref1 = resizeInfo.srcY) != null ? ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (ref2 = resizeInfo.trgX) != null ? ref2 : 0, (ref3 = resizeInfo.trgY) != null ? ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n            thumbnail = canvas.toDataURL(\"image/png\");\n            if (callback != null) {\n              return callback(thumbnail, canvas);\n            }\n          });\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = file.dataURL;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var j, len, ref, results;\n        ref = this.files;\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          file = ref[j];\n          if (file.xhr === xhr) {\n            results.push(file);\n          }\n        }\n        return results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, j, k, len, len1, ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (j = 0, len = groupedFiles.length; j < len; j++) {\n          groupedFile = groupedFiles[j];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (k = 0, len1 = groupedFiles.length; k < len1; k++) {\n          groupedFile = groupedFiles[k];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((ref = file.status) === Dropzone.ADDED || ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var doneCounter, doneFunction, file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, j, k, key, l, len, len1, len2, len3, m, method, o, option, progressObj, ref, ref1, ref2, ref3, ref4, ref5, response, results, updateProgress, url, value, xhr;\n      xhr = new XMLHttpRequest();\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.timeout = resolveOption(this.options.timeout, files);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var k, len1, results;\n          results = [];\n          for (k = 0, len1 = files.length; k < len1; k++) {\n            file = files[k];\n            results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, k, l, len1, len2, len3, m, progress, results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (k = 0, len1 = files.length; k < len1; k++) {\n              file = files[k];\n              file.upload.progress = progress;\n              file.upload.total = e.total;\n              file.upload.bytesSent = e.loaded;\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (l = 0, len2 = files.length; l < len2; l++) {\n              file = files[l];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          results = [];\n          for (m = 0, len3 = files.length; m < len3; m++) {\n            file = files[m];\n            results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var error1, ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          if (xhr.responseType !== 'arraybuffer' && xhr.responseType !== 'blob') {\n            response = xhr.responseText;\n            if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n              try {\n                response = JSON.parse(response);\n              } catch (error1) {\n                e = error1;\n                response = \"Invalid JSON response from server.\";\n              }\n            }\n          }\n          updateProgress();\n          if (!((200 <= (ref = xhr.status) && ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (ref = xhr.upload) != null ? ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        ref1 = this.options.params;\n        for (key in ref1) {\n          value = ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (k = 0, len1 = files.length; k < len1; k++) {\n        file = files[k];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (l = 0, len2 = ref2.length; l < len2; l++) {\n          input = ref2[l];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            ref3 = input.options;\n            for (m = 0, len3 = ref3.length; m < len3; m++) {\n              option = ref3[m];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((ref4 = inputType.toLowerCase()) !== \"checkbox\" && ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      doneCounter = 0;\n      results = [];\n      for (i = o = 0, ref5 = files.length - 1; 0 <= ref5 ? o <= ref5 : o >= ref5; i = 0 <= ref5 ? ++o : --o) {\n        doneFunction = (function(_this) {\n          return function(file, paramName, fileName) {\n            return function(transformedFile) {\n              formData.append(paramName, transformedFile, fileName);\n              if (++doneCounter === files.length) {\n                return _this.submitRequest(xhr, formData, files);\n              }\n            };\n          };\n        })(this);\n        results.push(this.options.transformFile.call(this, files[i], doneFunction(files[i], this._getParamName(i), files[i].upload.filename)));\n      }\n      return results;\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, j, len;\n      for (j = 0, len = files.length; j < len; j++) {\n        file = files[j];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"5.1.1\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, j, len, results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, j, len, results;\n        results = [];\n        for (j = 0, len = elements.length; j < len; j++) {\n          el = elements[j];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            results.push(dropzones.push(el));\n          } else {\n            results.push(void 0);\n          }\n        }\n        return results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    results = [];\n    for (j = 0, len = dropzones.length; j < len; j++) {\n      dropzone = dropzones[j];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        results.push(new Dropzone(dropzone));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, j, len, ref, regex;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        ref = Dropzone.blacklistedBrowsers;\n        for (j = 0, len = ref.length; j < len; j++) {\n          regex = ref[j];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  Dropzone.dataURItoBlob = function(dataURI) {\n    var ab, byteString, i, ia, j, mimeString, ref;\n    byteString = atob(dataURI.split(',')[1]);\n    mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    ab = new ArrayBuffer(byteString.length);\n    ia = new Uint8Array(ab);\n    for (i = j = 0, ref = byteString.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  };\n\n  without = function(list, rejectedItem) {\n    var item, j, len, results;\n    results = [];\n    for (j = 0, len = list.length; j < len; j++) {\n      item = list[j];\n      if (item !== rejectedItem) {\n        results.push(item);\n      }\n    }\n    return results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, error1, j, k, len, len1, ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (j = 0, len = els.length; j < len; j++) {\n          el = els[j];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (error1) {\n        e = error1;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      ref = document.querySelectorAll(els);\n      for (k = 0, len1 = ref.length; k < len1; k++) {\n        el = ref[k];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, j, len, mimeType, validType;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (j = 0, len = acceptedFiles.length; j < len; j++) {\n      validType = acceptedFiles[j];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(1, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n  ExifRestore = (function() {\n    function ExifRestore() {}\n\n    ExifRestore.KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    ExifRestore.encode64 = function(input) {\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;\n      output = '';\n      chr1 = void 0;\n      chr2 = void 0;\n      chr3 = '';\n      enc1 = void 0;\n      enc2 = void 0;\n      enc3 = void 0;\n      enc4 = '';\n      i = 0;\n      while (true) {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n      return output;\n    };\n\n    ExifRestore.restore = function(origFileBase64, resizedFileBase64) {\n      var image, rawImage, segments;\n      if (!origFileBase64.match('data:image/jpeg;base64,')) {\n        return resizedFileBase64;\n      }\n      rawImage = this.decode64(origFileBase64.replace('data:image/jpeg;base64,', ''));\n      segments = this.slice2Segments(rawImage);\n      image = this.exifManipulation(resizedFileBase64, segments);\n      return 'data:image/jpeg;base64,' + this.encode64(image);\n    };\n\n    ExifRestore.exifManipulation = function(resizedFileBase64, segments) {\n      var aBuffer, exifArray, newImageArray;\n      exifArray = this.getExifArray(segments);\n      newImageArray = this.insertExif(resizedFileBase64, exifArray);\n      aBuffer = new Uint8Array(newImageArray);\n      return aBuffer;\n    };\n\n    ExifRestore.getExifArray = function(segments) {\n      var seg, x;\n      seg = void 0;\n      x = 0;\n      while (x < segments.length) {\n        seg = segments[x];\n        if (seg[0] === 255 & seg[1] === 225) {\n          return seg;\n        }\n        x++;\n      }\n      return [];\n    };\n\n    ExifRestore.insertExif = function(resizedFileBase64, exifArray) {\n      var array, ato, buf, imageData, mae, separatePoint;\n      imageData = resizedFileBase64.replace('data:image/jpeg;base64,', '');\n      buf = this.decode64(imageData);\n      separatePoint = buf.indexOf(255, 3);\n      mae = buf.slice(0, separatePoint);\n      ato = buf.slice(separatePoint);\n      array = mae;\n      array = array.concat(exifArray);\n      array = array.concat(ato);\n      return array;\n    };\n\n    ExifRestore.slice2Segments = function(rawImageArray) {\n      var endPoint, head, length, seg, segments;\n      head = 0;\n      segments = [];\n      while (true) {\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {\n          break;\n        }\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {\n          head += 2;\n        } else {\n          length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];\n          endPoint = head + length + 2;\n          seg = rawImageArray.slice(head, endPoint);\n          segments.push(seg);\n          head = endPoint;\n        }\n        if (head > rawImageArray.length) {\n          break;\n        }\n      }\n      return segments;\n    };\n\n    ExifRestore.decode64 = function(input) {\n      var base64test, buf, chr1, chr2, chr3, enc1, enc2, enc3, enc4, i, output;\n      output = '';\n      chr1 = void 0;\n      chr2 = void 0;\n      chr3 = '';\n      enc1 = void 0;\n      enc2 = void 0;\n      enc3 = void 0;\n      enc4 = '';\n      i = 0;\n      buf = [];\n      base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        console.warning('There were invalid base64 characters in the input text.\\n' + 'Valid base64 characters are A-Z, a-z, 0-9, \\'+\\', \\'/\\',and \\'=\\'\\n' + 'Expect errors in decoding.');\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n      while (true) {\n        enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n        chr1 = enc1 << 2 | enc2 >> 4;\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n        chr3 = (enc3 & 3) << 6 | enc4;\n        buf.push(chr1);\n        if (enc3 !== 64) {\n          buf.push(chr2);\n        }\n        if (enc4 !== 64) {\n          buf.push(chr3);\n        }\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n        if (!(i < input.length)) {\n          break;\n        }\n      }\n      return buf;\n    };\n\n    return ExifRestore;\n\n  })();\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e, error1;\n      try {\n        root.doScroll(\"left\");\n      } catch (error1) {\n        e = error1;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (undefined) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dropzone/dist/dropzone.js\n// module id = 3\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 5\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dropzone-container\"\n  }, [_c('div', {\n    ref: \"dropzone\",\n    staticClass: \"dropzone\"\n  }, [_c('div', {\n    staticClass: \"fallback\"\n  }, [_c('input', _vm._b({\n    attrs: {\n      \"type\": \"file\",\n      \"name\": _vm.name\n    }\n  }, 'input', {\n    'multiple': _vm.dropzone.options.uploadMultiple\n  }, false))]), _vm._v(\" \"), _vm._t(\"default-message\", [_c('div', {\n    staticClass: \"dz-message text-xs-center\",\n    attrs: {\n      \"data-dz-message\": \"\"\n    }\n  }, [_c('v-icon', {\n    staticClass: \"grey--text display-4\"\n  }, [_vm._v(\"cloud_upload\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"grey--text\"\n  }, [_vm._v(\"UPLOAD\")])], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"dropzone-previews\"\n  }, [_c('div', {\n    staticClass: \"text-xs-center\",\n    attrs: {\n      \"data-preview-template\": \"\"\n    }\n  }, [_vm._t(\"preview-template\", [_c('v-card', {\n    staticClass: \"card--thumbnail elevation-1 ma-2\",\n    attrs: {\n      \"tile\": \"\"\n    }\n  }, [_c('v-card-media', {\n    staticClass: \"accent\",\n    attrs: {\n      \"data-dz-thumbnail\": \"\",\n      \"height\": _vm.dropzone.options.thumbnailHeight\n    }\n  }, [_c('img', {\n    attrs: {\n      \"data-dz-thumbnail\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-container', {\n    staticClass: \"zi-1\",\n    attrs: {\n      \"fluid\": \"\",\n      \"fill-height\": \"\"\n    }\n  }, [_c('v-layout', {\n    staticClass: \"pa-0\",\n    attrs: {\n      \"column\": \"\",\n      \"wrap\": \"\",\n      \"fill-height\": \"\"\n    }\n  }, [_c('v-toolbar', {\n    staticClass: \"transparent\",\n    attrs: {\n      \"dense\": \"\",\n      \"card\": \"\"\n    }\n  }, [_c('v-spacer'), _vm._v(\" \"), _c('v-btn', {\n    staticClass: \"error btn--dz-remove\",\n    attrs: {\n      \"icon\": \"\",\n      \"dark\": \"\",\n      \"role\": \"button\",\n      \"data-dz-remove\": \"\"\n    }\n  }, [_c('v-icon', [_vm._v(\"close\")])], 1)], 1), _vm._v(\" \"), _c('v-spacer')], 1)], 1)], 1), _vm._v(\" \"), _c('v-card-title', {\n    staticClass: \"subheading\",\n    attrs: {\n      \"data-dz-name\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-card-actions', {\n    staticClass: \"caption\"\n  }, [_c('div', {\n    staticClass: \"dz-size\",\n    attrs: {\n      \"data-dz-size\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-spacer'), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-type\",\n    attrs: {\n      \"data-dz-type\": \"\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-success-mark\"\n  }, [_c('v-icon', {\n    staticClass: \"display-4 success--text\"\n  }, [_vm._v(\"check\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-progress\"\n  }, [_c('div', {\n    staticClass: \"dz-upload primary\",\n    attrs: {\n      \"data-dz-uploadprogress\": \"\"\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"dz-error-message dz-hidden\"\n  }, [_c('div', {\n    staticClass: \"dz-error-mark text-xs-center\"\n  }, [_c('v-icon', {\n    staticClass: \"display-4 error--text\"\n  }, [_vm._v(\"warning\")])], 1), _vm._v(\" \"), _c('v-card', {\n    staticClass: \"error white--text\",\n    attrs: {\n      \"flat\": \"\",\n      \"tile\": \"\"\n    }\n  }, [_c('v-card-text', {\n    staticClass: \"dz-errormessage-blurb\",\n    attrs: {\n      \"data-dz-errormessage\": \"\"\n    }\n  })], 1)], 1)], 1)])], 2)])], 2), _vm._v(\" \"), _vm._t(\"default\"), _vm._v(\" \"), (!_vm.dropzone.options.autoProcessQueue) ? [_vm._t(\"submit\", [_c('v-card-actions', [_c('v-spacer'), _vm._v(\" \"), _c('v-btn', {\n    attrs: {\n      \"primary\": \"\",\n      \"ripple\": \"\"\n    },\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.dropzonebox().submit()\n      }\n    }\n  }, [_c('v-icon', {\n    attrs: {\n      \"left\": \"\"\n    },\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.dropzone.options.dictUploadButtonIcon)\n    }\n  }), _c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.dropzone.options.dictUploadButtonLabel)\n    }\n  })], 1)], 1)])] : _vm._e()], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-7f7a612b\",\"hasScoped\":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Component.vue\n// module id = 6\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}